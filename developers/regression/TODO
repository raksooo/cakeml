TODO: Change (text) API endpoint to regression.cgi/api/

TODO: Write HTML interface for status output
  Thus regression.cgi/{,active,waiting,stopped,etc.} will return a nicely
  presented webpage (with links) for viewing the current status of the queues.

TODO: Write help/usage interface for worker
  Make the program more self-documenting.

TODO: Make server send email to builds@cakeml.org when a job is stopped

TODO: Update GitHub commit status for jobs in the system
  Probably this should be done by the server or poller.
  When a job is claimed: mark its commit as being tested
  When a job is stopped: mark its commit as passed/failed

TODO: Use GitHub webhooks or similar to avoid polling for changes
  Thus the poller won't be run in polling mode, but instead will be the target
  of a webhook that GitHub calls to update our queues.

TODO: Make poller stop jobs that have been running too long

TODO: Add interface for disowning jobs? Probably not...
  Currently, you can manually stop a job that is supposedly active and claimed
  by a worker that has gone rogue or died. Then another similar job will
  eventually be added to the queue if necessary. But would it be nice to
  instead be able to re-use the existing job number?

(*
server = api.sml
poller = poll.sml
worker = worker.sml
*)
